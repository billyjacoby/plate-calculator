{"version":3,"sources":["components/Header.js","style/Global.js","components/Plate.js","lib/plateCalculator.js","App.js","index.js"],"names":["HeaderStyled","styled","header","InnerContainer","div","MainHeading","h1","SubHeading","h3","Header","href","Button","button","props","small","GlobalStyle","createGlobalStyle","Container","WeightText","span","Plate","weight","inventory","setPlateInventory","type","onClick","calculateWeights","desiredWeight","barWeight","plateInventory","parseInt","weightsNeeded","plates","closestWeight","Object","entries","sort","a","b","set","numPlates","Math","floor","push","plateWeight","qty","exactWeight","AppContainer","Form","form","PlateInventory","PlateContainer","PlatesNeeded","WeightNeededList","ul","WeightNeededItem","li","App","useState","setDesiredWeight","setBarWeight","results","setResults","45","35","25","10","5","2.5","clickCalculate","e","preventDefault","htmlFor","name","placeholder","value","onChange","target","id","style","padding","default","disabled","map","plate","ReactDOM","render","StrictMode","Global","document","getElementById"],"mappings":"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","file":"static/js/main.8a03d415.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst HeaderStyled = styled.header`\n  display: flex;\n  justify-content: center;\n  background-color: var(--headerBGColor);\n  color: var(--headerFontColor);\n`;\n\nconst InnerContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: space-around;\n  align-items: center;\n  padding: 15px 0;\n  max-width: 800px;\n`;\n\nconst MainHeading = styled.h1`\n  padding: 0;\n  margin: 0;\n`;\n\nconst SubHeading = styled.h3`\n  padding: 0;\n  margin: 0;\n  font-size: 14px;\n  font-weight: 400;\n`;\n\nexport default function Header() {\n  return (\n    <HeaderStyled>\n      <InnerContainer>\n        <div>\n          <MainHeading>plate calculator</MainHeading>\n          <SubHeading>get strong, not smart</SubHeading>\n        </div>\n        <div>\n          <a href=\"https://github.com\">Github</a>\n        </div>\n      </InnerContainer>\n    </HeaderStyled>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\nimport styled from \"styled-components\";\n\nexport const Button = styled.button`\n  font-size: ${(props) => (props.small ? \"12px\" : \"24px\")};\n  min-width: ${(props) => (props.small ? \"2rem\" : \"3rem\")};\n  min-height: ${(props) => (props.small ? \"2rem\" : \"3rem\")};\n  padding: 10px;\n  border-radius: 15px;\n  margin: 10px;\n\n  background-color: var(--colorFour);\n  border: none;\n  color: white;\n  text-align: center;\n  text-decoration: none;\n`;\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --blue: green;\n\n    ${\"\" /* Colors! */}\n    --colorOne: #082032;\n    --colorTwo: #2C394B;\n    --colorThree: #334756;\n    --colorFour: #FF4C29;\n    --colorFive: #f4f4f4;\n\n    --headerBGColor: #082032;\n    --headerFontColor: #FF4C29;\n  }\n\n  html {\n    font-family: Inter;\n    font-weight: 400;\n    color: var(--colorFive);\n  }\n  body {\n    background-color: var(--colorThree);\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from \"styled-components\";\nimport { Button } from \"../style/Global\";\n\nconst Container = styled.div`\n  border: 1px solid var(--colorFive);\n  margin: 5px;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1 200px;\n  /* padding: 50px 0; */\n`;\n\nconst InnerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 150px;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst WeightText = styled.span`\n  font-size: 24px;\n  font-weight: 600;\n`;\n\nconst Plate = ({ weight, inventory, setPlateInventory }) => {\n  return (\n    <Container>\n      <InnerContainer>\n        <WeightText>{weight} lbs</WeightText>\n        <div>\n          <Button\n            type=\"button\"\n            onClick={() =>\n              setPlateInventory({\n                ...inventory,\n                [weight]: inventory[weight] - 1,\n              })\n            }\n          >\n            -\n          </Button>\n          <WeightText>{inventory[weight]}</WeightText>\n          <Button\n            type=\"button\"\n            onClick={() =>\n              setPlateInventory({\n                ...inventory,\n                [weight]: inventory[weight] + 1,\n              })\n            }\n          >\n            +\n          </Button>\n        </div>\n      </InnerContainer>\n    </Container>\n  );\n};\n\nexport default Plate;\n","function calculateWeights({ desiredWeight, barWeight, plateInventory }) {\n  desiredWeight = parseInt(desiredWeight, 10);\n  barWeight = parseInt(barWeight, 10);\n  if (desiredWeight - barWeight < 0) return false;\n  let weightsNeeded = {\n    plates: [],\n    closestWeight: 0,\n  };\n\n  let weight = desiredWeight - barWeight;\n  weightsNeeded.closestWeight = barWeight;\n  for (var set of Object.entries(plateInventory).sort((a, b) => {\n    if (parseInt(a[0]) < parseInt(b[0])) {\n      return 1;\n    } else {\n      return -1;\n    }\n  })) {\n    let numPlates = 2 * Math.floor(weight / set[0] / 2);\n    if (set[1] >= numPlates) {\n      // Only add to the array if the weights are needed\n      if (numPlates === 0) continue;\n      plateInventory[set[0]] -= numPlates;\n      weightsNeeded.plates.push({ plateWeight: set[0], qty: numPlates });\n      weightsNeeded.closestWeight += set[0] * numPlates;\n      weight -= set[0] * numPlates;\n    } else {\n      // TODO: Add logic here to only return an even number of plates\n      plateInventory[set[0]] = 0;\n      weightsNeeded.plates.push({ plateWeight: set[0], qty: set[1] });\n      weightsNeeded.closestWeight += set[0] * set[1];\n      weight -= set[0] * set[1];\n    }\n  }\n  if (\n    parseInt(weightsNeeded.closestWeight, 10) === parseInt(desiredWeight, 10)\n  ) {\n    weightsNeeded.exactWeight = true;\n  }\n  return weightsNeeded;\n}\n\nexport default calculateWeights;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport \"../node_modules/normalize.css/normalize.css\";\n\nimport Header from \"./components/Header\";\nimport Plate from \"./components/Plate\";\n\nimport { Button } from \"./style/Global\";\n\nimport calculateWeights from \"./lib/plateCalculator\";\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\nconst InnerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  & > * {\n    margin: 10px 0;\n  }\n`;\n\nconst PlateInventory = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst PlateContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst PlatesNeeded = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px solid var(--colorFive);\n  padding: 10px 100px;\n  border-radius: 10px;\n\n  & > * {\n    margin: 2px 0px;\n  }\n`;\n\nconst WeightNeededList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0;\n  list-style: none;\n`;\n\nconst WeightNeededItem = styled.li`\n  font-weight: 600;\n  font-size: 24px;\n  margin: 5px 0;\n`;\n\nfunction App() {\n  const [desiredWeight, setDesiredWeight] = useState(\"\");\n  const [barWeight, setBarWeight] = useState(45);\n\n  const [results, setResults] = useState();\n\n  const [plateInventory, setPlateInventory] = useState({\n    45: 4,\n    35: 2,\n    25: 4,\n    10: 4,\n    5: 4,\n    2.5: 2,\n  });\n\n  function clickCalculate(e) {\n    e?.preventDefault();\n    setResults(\n      calculateWeights({\n        desiredWeight,\n        barWeight: barWeight || 0,\n        // Interesting that passing in the actual object here changes it\n        plateInventory: { ...plateInventory },\n      })\n    );\n  }\n\n  return (\n    <AppContainer>\n      <Header />\n      <InnerContainer>\n        <Form>\n          <label htmlFor=\"desiredWeight\">\n            Enter Desired Weight:\n            <input\n              type=\"number\"\n              name=\"desiredWeight\"\n              placeholder=\"135\"\n              value={desiredWeight}\n              onChange={(e) => setDesiredWeight(e.target.value)}\n            />\n          </label>\n          <label htmlFor=\"barWeight\"> Choose a bar weight: </label>\n          <select\n            name=\"barWeight\"\n            id=\"barWeight\"\n            style={{ padding: \"2px 10px\" }}\n            value={barWeight}\n            onChange={(e) => setBarWeight(e.target.value)}\n          >\n            <option value=\"45\" default>\n              45lbs\n            </option>\n            <option value=\"35\">35lbs</option>\n            <option value=\"25\">25lbs</option>\n            <option value=\"15\">15lbs</option>\n            <option value=\"10\">10lbs</option>\n            <option value=\"0\">0</option>\n            <option value=\"other\" disabled>\n              other\n            </option>\n          </select>\n          {results ? (\n            <PlatesNeeded>\n              <h3>Plates needed:</h3>\n              <div>\n                {!results?.exactWeight && (\n                  <p>Closest Weight: {results?.closestWeight}</p>\n                )}\n                <WeightNeededList>\n                  {results?.plates.map((plate) => {\n                    return (\n                      <WeightNeededItem key={plate.plateWeight}>\n                        <span>\n                          {plate.plateWeight}lbs x {plate.qty}\n                        </span>\n                      </WeightNeededItem>\n                    );\n                  })}\n                </WeightNeededList>\n              </div>\n              <Button\n                type=\"submit\"\n                onClick={clickCalculate}\n                disabled={!desiredWeight}\n              >\n                re-Calculate!\n              </Button>\n            </PlatesNeeded>\n          ) : (\n            <Button\n              type=\"submit\"\n              onClick={clickCalculate}\n              disabled={!desiredWeight}\n            >\n              Calculate!\n            </Button>\n          )}\n        </Form>\n        <PlateInventory>\n          <h2>Plate Inventory:</h2>\n          <PlateContainer>\n            <Plate\n              weight=\"45\"\n              inventory={plateInventory}\n              setPlateInventory={setPlateInventory}\n            />\n            <Plate\n              weight=\"35\"\n              inventory={plateInventory}\n              setPlateInventory={setPlateInventory}\n            />\n            <Plate\n              weight=\"25\"\n              inventory={plateInventory}\n              setPlateInventory={setPlateInventory}\n            />\n            <Plate\n              weight=\"10\"\n              inventory={plateInventory}\n              setPlateInventory={setPlateInventory}\n            />\n            <Plate\n              weight=\"5\"\n              inventory={plateInventory}\n              setPlateInventory={setPlateInventory}\n            />\n            <Plate\n              weight=\"2.5\"\n              inventory={plateInventory}\n              setPlateInventory={setPlateInventory}\n            />\n          </PlateContainer>\n        </PlateInventory>\n      </InnerContainer>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport GlobalStyle from \"./style/Global\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <GlobalStyle />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}